/*
 * Copyright 2017, Data61
 * Commonwealth Scientific and Industrial Research Organisation (CSIRO)
 * ABN 41 687 119 230.
 *
 * This software may be distributed and modified according to the terms of
 * the BSD 2-Clause license. Note that NO WARRANTY is provided.
 * See "LICENSE_BSD2.txt" for details.
 *
 * @TAG(DATA61_BSD)
 */

/*
 * CAmkES device driver tutorial.
 */

import <std_connector.camkes>;

/* import the component definitions */
import "components/Client/Client.camkes";
import "components/Timer/Timer.camkes";

/*- if not solution -*/
/* A valid CAmkES assembly must have at least one component. As the starting point for
 * this tutorial does not have any valid components we declare an empty one that does nothing
 * just to construct a valid spec. Once you have added some components to the composition
 * you can remove this if you want, although it will cause no harm being left in */
component EmptyComponent {
}
/*- endif -*/

assembly {
    composition {
/*- if not solution -*/
        component EmptyComponent empty;
/*- endif -*/
        /* TASK 1: component instances */
        /* hint 1: one hardware component, one driver component
         * hint 2: look at
         * https://github.com/seL4/camkes-tool/blob/master/docs/index.md#creating-an-application
         */
/*- if solution -*/
        component Timerbase timerbase;
        component Timer timer;
/*- endif -*/

/*- if solution -*/
        component Client client;
/*- else -*/
        /* this is the component interface. This starts commented out as there it must have
         * its 'hello' interface connected, which initially we cannot do. Uncomment this once
         * you can uncomment the 'timer interface connection' below */
//        component Client client;
/*- endif -*/

        /* TASK 2: connections */
        /* hint 1: use seL4HardwareMMIO to connect device memory
         * hint 2: use seL4HardwareInterrupt to connect interrupt
         * hint 3: look at
         * https://github.com/seL4/camkes-tool/blob/master/docs/index.md#creating-an-application
         */
/*- if solution -*/
        connection seL4HardwareMMIO timer_mem(from timer.reg, to timerbase.reg);
        connection seL4HardwareInterrupt timer_irq(from timerbase.irq, to timer.irq);
/*- endif -*/

        /* timer interface connection */
/*- if solution -*/
        connection seL4RPCCall hello_timer(from client.hello, to timer.hello);
/*- else -*/
        /* uncomment this (and the insantiation of 'client' above) once there is a timer component */
//        connection seL4RPCCall hello_timer(from client.hello, to timer.hello);
/*- endif -*/
    }
    configuration {
        /* TASK 3: hardware resources */
        /* hint 1: find out the device memory address and IRQ number from the hardware data sheet
         * hint 2: look at
         * https://github.com/seL4/camkes-tool/blob/master/docs/index.md#hardware-components
         */
/*- if solution -*/
        timerbase.reg_paddr = 0xF8001000;   // paddr of mmio registers
        timerbase.reg_size = 0x1000;        // size of mmio registers
        timerbase.irq_irq_number = 42;      // timer irq number
/*- endif -*/

        /* assign an initial value to semaphore */
/*- if solution -*/
        timer.sem_value = 0;
/*- else -*/
//        timer.sem_value = 0;
/*- endif -*/
    }
}

